
public class Numbers {
	public static String[] mSmallArr = { "0", "1", "2", "3", "4"};
	public static String[] mBigArr = { "5", "6", "7", "8", "9"};
	public static String[] mJiArr = { "1", "3", "5", "7", "9"};
	public static String[] mOuArr = { "0", "2", "4", "6", "8"};
	public static String[] mZhiArr = { "1", "2", "3", "5", "7"};
	public static String[] mHeArr = { "0", "4", "6", "8", "9"};

	//制定删除位
	public static String[][] mDeleteNumbers = {  {"4"},
		 										 {"7"},
		 										 {"1"},
		 										 {""},
		 										 {"5", "9"}
		 										 };

	//不能同时出现的数字
	public static String [][] mDeleteGroups = { {"", "", "" ,"", "" }
	};

	//过滤历史数字
	public static String[] mDeleteHistories= {
		"56960",
		"32876",
		"85058",
		"48687",
		"51202",
		"98385",
		"67857",
		"38650",
		"97951",
		"89037",
		"08317",
		"72895",
		"43433",
		"60936",
		"05104",
		"37142",
		"29491",
		"81208",
		"34664",
		"30434",
		"05837",
		"62179",
		"49139",
		"58696",
		"79904",
		"00856",
		"77880",
		"95312",
		"92610",
		"66787",
		"98669",
		"35311",
		"79119",
	};
	
	public static String DATA = "000 001 002 005 006 007 008 009 010 011 012 014 015 016 017 019 020 021 023 024 025 027 028 029 030 032 033 034 035 036 037 038 039 041 042 043 044 045 046 047 048 049 050 051 052 053 054 055 056 057 058 060 061 062 063 064 065 066 067 069 070 071 072 073 074 075 076 078 080 081 082 083 084 085 087 088 089 090 091 092 093 094 096 097 098 099 100 101 102 104 105 106 107 108 109 110 113 119 120 123 129 131 132 133 134 135 136 137 138 139 140 143 150 153 159 160 163 169 170 173 180 183 189 190 191 192 193 195 196 197 198 199 200 201 204 205 206 207 208 209 210 213 219 223 229 230 231 232 233 234 235 236 237 238 240 243 249 250 253 259 260 263 269 270 273 280 283 289 290 291 292 294 295 296 297 298 299 300 302 304 305 306 307 308 309 311 312 313 314 315 316 317 319 320 321 322 323 324 325 327 328 330 331 332 333 334 335 336 337 339 340 341 342 343 344 345 346 348 349 350 351 352 353 354 355 357 358 359 360 361 362 363 364 366 367 368 369 370 371 372 373 375 376 377 378 380 381 382 384 385 386 387 388 389 390 391 393 394 395 396 397 398 399 401 402 404 405 406 407 408 409 410 413 420 423 429 430 431 432 433 434 435 436 438 439 440 443 449 450 453 459 460 463 469 470 480 483 489 490 492 493 494 495 496 497 498 499 500 501 502 504 505 506 507 508 510 513 519 520 523 529 530 531 532 533 534 535 537 538 539 540 543 549 550 553 559 560 569 570 573 580 583 589 591 592 593 594 595 596 597 598 599 600 601 602 604 605 606 607 609 610 613 619 620 623 629 630 631 632 633 634 636 637 638 639 640 643 649 650 659 660 663 669 670 673 683 689 690 691 692 693 694 695 696 697 698 700 701 702 704 705 706 708 709 710 713 719 720 723 729 730 731 732 733 735 736 737 738 739 740 749 750 753 759 760 763 769 773 780 783 790 791 792 793 794 795 796 797 799 800 801 802 804 805 807 808 809 810 813 819 820 823 829 830 831 832 834 835 836 837 838 839 840 843 849 850 853 859 863 869 870 873 880 883 889 890 891 892 893 894 895 896 898 899 900 901 902 904 906 907 908 909 910 911 912 913 915 916 917 919 920 921 922 924 925 927 928 929 930 931 933 934 935 936 937 938 939 940 942 943 944 945 946 947 948 949 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 970 971 972 973 974 975 976 977 980 981 982 983 984 985 986 988 989 990 991 992 993 994 995 997 998 999";
}
